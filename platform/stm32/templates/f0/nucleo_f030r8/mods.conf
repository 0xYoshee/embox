package genconfig

configuration conf {
    include platform.stm32.f0.nucleo_f030r8.arch
    
    include embox.arch.arm.libarch
    include embox.arch.arm.fpu.fpu_stub

    include embox.kernel.irq_static
    include embox.kernel.critical
    include embox.kernel.task.single
    include embox.kernel.task.resource.idesc_table(idesc_table_size=3)
    include embox.kernel.task.task_no_table
    include embox.driver.tty.task_breaking_disable
    include embox.driver.char_dev_stub
    include embox.fs.driver.devfs_stub

    /* Cooperative-only scheduling */
    @Runlevel(2) include embox.kernel.sched.boot_light
    @Runlevel(2) include embox.kernel.sched.timing.none
    include embox.kernel.sched.sched_ticker_stub
    
    include embox.kernel.thread.thread_none
    include embox.kernel.thread.thread_local_none
    include embox.kernel.thread.thread_cancel_disable
    include embox.kernel.thread.stack_none
    include embox.kernel.thread.signal_stub
    include embox.kernel.sched.sched_ticker_stub
    include embox.kernel.time.jiffies(cs_name="cortexm_systick")
    include embox.driver.diag.mem_diag
    include embox.driver.diag(impl="embox__driver__diag__mem_diag")

    include embox.util.dlist

    include embox.kernel.timer.sleep_nosched

    @Runlevel(0) include embox.arch.arm.armmlib.interrupt
    @Runlevel(0) include embox.arch.system(core_freq=32000000)
    @Runlevel(0) include embox.kernel.stack(stack_size=2048,alignment=4)

    @Runlevel(1) include embox.driver.interrupt.cortexm_nvic
    @Runlevel(1) include embox.driver.clock.cortexm_systick


    @Runlevel(1) include embox.kernel.timer.sys_timer(timer_quantity=2)
    @Runlevel(1) include embox.kernel.timer.strategy.head_timer
    @Runlevel(1) include embox.kernel.time.kernel_time
    @Runlevel(1) include embox.kernel.timer.itimer(itimer_quantity=0)
        
    include embox.driver.periph_memory_stub

    include embox.kernel.spinlock(spin_debug=false)
    include embox.util.dlist(debug=0)
    include embox.util.Bit
    include embox.framework.embuild_light(use_mod_names=false)
    include embox.compat.libc.stdio.print(support_floating=0)
    include embox.compat.posix.util.time
    include embox.compat.libc.strerror(strerror_short=1)
    include embox.compat.libc.stdio.scanf_without_file
}