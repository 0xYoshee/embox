package third_party.lib.opencv

@Build(script="$(EXTERNAL_MAKE)")
@BuildArtifactPath(cppflags="-I$(EXTERNAL_BUILD_DIR)/third_party/lib/opencv/build/opencv-4.0.1/modules/core/include/")
@BuildArtifactPath(cppflags="-I$(EXTERNAL_BUILD_DIR)/third_party/lib/opencv/build/opencv-4.0.1/modules/imgproc/include/")
@BuildArtifactPath(cppflags="-I$(EXTERNAL_BUILD_DIR)/third_party/lib/opencv/build/opencv-4.0.1/modules/highgui/include/")
@BuildArtifactPath(cppflags="-I$(EXTERNAL_BUILD_DIR)/third_party/lib/opencv/build/opencv-4.0.1/modules/imgcodecs/include/")
@BuildArtifactPath(cppflags="-I$(EXTERNAL_BUILD_DIR)/third_party/lib/opencv/build/opencv-4.0.1/modules/objdetect/include/")
@BuildArtifactPath(cppflags="-I$(EXTERNAL_BUILD_DIR)/third_party/lib/opencv/build/opencv-4.0.1/modules/videoio/include/")
@BuildArtifactPath(cppflags="-I$(EXTERNAL_BUILD_DIR)/third_party/lib/opencv/build/opencv-4.0.1/modules/video/include/")
@BuildArtifactPath(cppflags="-I$(EXTERNAL_BUILD_DIR)/third_party/lib/opencv/build/build/")
@BuildDepends(third_party.gcc.libstdcxx)
@BuildDepends(third_party.gcc.libsupcxx)
static module build {

	depends embox.compat.posix.proc.atexit_api
	depends embox.compat.posix.util.gettimeofday
	depends embox.compat.atomic.pseudo_atomic
	depends embox.compat.libc.math
	@NoRuntime depends embox.compat.posix.sys.mman.mmap_api // include sys/mman.h
	@NoRuntime depends embox.compat.libc.all
	@NoRuntime depends embox.compat.posix.pthread_key
	@NoRuntime depends third_party.gcc.libstdcxx
	@NoRuntime depends third_party.gcc.libsupcxx
}

@LinkerSection(text="cv_text",rodata="cv_rodata",data="cv_data",bss="cv_bss",arm_exidx="cv_arm_exidx",arm_extab="cv_arm_extab")
@BuildDepends(third_party.lib.opencv.build)
@Build(script="true")
static module libopencv_core {
	source "^BUILD/extbld/third_party/lib/opencv/build/install/libopencv_core.a"

	@NoRuntime depends build
}

@LinkerSection(text="cv_text",rodata="cv_rodata",data="cv_data",bss="cv_bss",arm_exidx="cv_arm_exidx",arm_extab="cv_arm_extab")
@BuildDepends(third_party.lib.opencv.build)
@Build(script="true")
static module libopencv_imgcodecs {
	source "^BUILD/extbld/third_party/lib/opencv/build/install/libopencv_imgcodecs.a"

	@NoRuntime depends build
}

@LinkerSection(text="cv_text",rodata="cv_rodata",data="cv_data",bss="cv_bss",arm_exidx="cv_arm_exidx",arm_extab="cv_arm_extab")
@BuildDepends(third_party.lib.opencv.build)
@Build(script="true")
static module libopencv_imgproc {
	source "^BUILD/extbld/third_party/lib/opencv/build/install/libopencv_imgproc.a"

	@NoRuntime depends build
}

@LinkerSection(text="cv_text",rodata="cv_rodata",data="cv_data",bss="cv_bss",arm_exidx="cv_arm_exidx",arm_extab="cv_arm_extab")
@BuildDepends(third_party.lib.opencv.build)
@Build(script="true")
static module libopencv_objdetect {
	source "^BUILD/extbld/third_party/lib/opencv/build/install/libopencv_objdetect.a"

	@NoRuntime depends build
}

@LinkerSection(text="cv_text",rodata="cv_rodata",data="cv_data",bss="cv_bss",arm_exidx="cv_arm_exidx",arm_extab="cv_arm_extab")
@BuildDepends(third_party.lib.opencv.build)
@Build(script="true")
static module libopencv_videoio {
	source "^BUILD/extbld/third_party/lib/opencv/build/install/libopencv_videoio.a"

	@NoRuntime depends build
}

@LinkerSection(text="cv_text",rodata="cv_rodata",data="cv_data",bss="cv_bss",arm_exidx="cv_arm_exidx",arm_extab="cv_arm_extab")
@BuildDepends(third_party.lib.opencv.build)
@Build(script="true")
static module liblibpng {
	source "^BUILD/extbld/third_party/lib/opencv/build/install/liblibpng.a"

	@NoRuntime depends build
}

@LinkerSection(text="cv_text",rodata="cv_rodata",data="cv_data",bss="cv_bss",arm_exidx="cv_arm_exidx",arm_extab="cv_arm_extab")
@BuildDepends(third_party.lib.opencv.build)
@Build(script="true")
static module libzlib {
	source "^BUILD/extbld/third_party/lib/opencv/build/install/libzlib.a"

	@NoRuntime depends build
}

@BuildDepends(third_party.lib.opencv.build)
static module all {
	@NoRuntime depends libopencv_core
	@NoRuntime depends libopencv_imgcodecs
	@NoRuntime depends libopencv_imgproc
	@NoRuntime depends libopencv_objdetect
	@NoRuntime depends libopencv_videoio
	@NoRuntime depends liblibpng
	@NoRuntime depends libzlib
}
