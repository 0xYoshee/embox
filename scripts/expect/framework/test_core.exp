package provide autotest 1.0

namespace eval ::autotest {
	namespace export TEST_SETUP_HOST TEST_TEARDOWN_HOST \
		TEST_SETUP_TARGET TEST_TEARDOWN_TARGET \
		TEST_CASE_TARGET TEST_CASE_HOST

	# MUST BE CALLED IN EACH TEST SUITE
	namespace export TEST_SUITE_SETUP

	namespace export test_assert_regexp_equal
	namespace export test_assert_regexp_equal_timeout

	variable embox_ip
	variable host_ip
	variable host_passwd
}

source [file join [file dirname [info script]] test_exec.exp]
source [file join [file dirname [info script]] test_cmd.exp]

proc ::autotest::TEST_SUITE_SETUP {} {
	global argv

	variable embox_ip
	variable host_ip
	variable host_passwd

	set embox_ip    [lindex $argv 0]
	set host_ip     [lindex $argv 1]
	set host_passwd [lindex $argv 2]
}

proc ::autotest::TEST_SETUP_HOST {setup_body} {
	eval $setup_body
}

proc ::autotest::TEST_TEARDOWN_HOST {teardown_body} {
	eval $teardown_body
}

proc ::autotest::TEST_SETUP_TARGET {setup_body} {
	telnet_connect
	eval $setup_body
	telnet_disconnect
}

proc ::autotest::TEST_TEARDOWN_TARGET {teardown_body} {
	telnet_connect
	eval $teardown_body
	telnet_disconnect
}

proc ::autotest::TEST_CASE_IMPL {mode test_name test_body} {
	set logfile "[file rootname [info script]].log"

	puts "\n		TEST CASE \"$test_name\" running ...\n"
	
	# Execute test
	set res [test_exec $mode $test_name $test_body]

	if {[file exists $logfile]} {
		if {$res != 0} {
			set result_str "        TEST CASE \"$test_name\" ERROR"
		} else {
			set result_str "        TEST CASE \"$test_name\" OK"
		}
		exec echo -e $result_str >> $logfile
	}

	if {$res != 0} {
		exit 1
	}

	return 0
}

proc ::autotest::TEST_CASE_TARGET {test_name test_body} {
	return [TEST_CASE_IMPL "target" $test_name $test_body]
}

proc ::autotest::TEST_CASE_HOST {test_name test_body} {
	return [TEST_CASE_IMPL "host" $test_name $test_body]
}
